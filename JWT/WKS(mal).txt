എന്താണ് JWTകൾ?
സിസ്റ്റങ്ങൾക്കിടയിൽ ക്രിപ്‌റ്റോഗ്രാഫിക്കായി ഒപ്പിട്ട JSON ഡാറ്റ അയയ്ക്കുന്നതിനുള്ള ഒരു സ്റ്റാൻഡേർഡ് ഫോർമാറ്റാണ് JSON വെബ് ടോക്കണുകൾ (JWTs). അവയ്ക്ക് സൈദ്ധാന്തികമായി(cryptographically) ഏത് തരത്തിലുള്ള ഡാറ്റയും അടങ്ങിയിരിക്കാം, എന്നാൽ പ്രാമാണീകരണം(authentication), സെഷൻ കൈകാര്യം ചെയ്യൽ, ആക്സസ് കൺട്രോൾ മെക്കാനിസങ്ങൾ എന്നിവയുടെ ഭാഗമായി ഉപയോക്താക്കളെക്കുറിച്ചുള്ള വിവരങ്ങൾ ("ക്ലെയിമുകൾ") അയയ്‌ക്കാൻ സാധാരണയായി ഉപയോഗിക്കുന്നു.

ക്ലാസിക് സെഷൻ ടോക്കണുകളിൽ നിന്ന് വ്യത്യസ്തമായി, ഒരു സെർവറിന് ആവശ്യമായ എല്ലാ ഡാറ്റയും JWT-യിൽ തന്നെ ക്ലയന്റ് സൈഡിൽ സംഭരിച്ചിരിക്കുന്നു. ഉപയോക്താക്കൾക്ക് ഒന്നിലധികം ബാക്ക്-എൻഡ് സെർവറുകളുമായി തടസ്സമില്ലാതെ ഇടപഴകേണ്ട ഉയർന്ന വിതരണ വെബ്‌സൈറ്റുകൾക്കായി ഇത് JWT-കളെ ഒരു ജനപ്രിയ ചോയിസ് ആക്കുന്നു.
JWT ഫോർമാറ്റ്
ഒരു JWT യിൽ 3 ഭാഗങ്ങൾ അടങ്ങിയിരിക്കുന്നു: ഒരു തലക്കെട്ട്, ഒരു പേലോഡ്, ഒരു ഒപ്പ്. ഇനിപ്പറയുന്ന ഉദാഹരണത്തിൽ കാണിച്ചിരിക്കുന്നതുപോലെ ഇവ ഓരോന്നും ഒരു ഡോട്ട് കൊണ്ട് വേർതിരിച്ചിരിക്കുന്നു:

"eyJraWQiOiI5MTM2ZGRiMy1jYjBhLTRhMTktYTA3ZS1lYWRmNWE0NGM4YjUiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJwb3J0c3dpZ2dlciIsImV4cCI6MTY0ODAzNzE2NCwibmFtZSI6IkNhcmxvcyBNb250b3lhIiwic3ViIjoiY2FybG9zIiwicm9sZSI6ImJsb2dfYXV0aG9yIiwiZW1haWwiOiJjYXJsb3NAY2FybG9zLW1vbnRveWEubmV0IiwiaWF0IjoxNTE2MjM5MDIyfQ.SYZBPIBg2CRjXAJ8vCER0LA_ENjII1JakvNQoP-Hw6GG1zfl4JyngsZReIfqRvIAEi5L4HV0q7_9qGhQZvy9ZdxEJbwTxRs_6Lb-fZTDpW6lKYNdMyjw45_alSCZ1fypsMWz_2mTpQzil0lOtps5Ei_z7mM7M8gCwe_AGpI53JxduQOaB5HkT5gVrv9cKu9CsW5MS6ZbqYXpGyOG5ehoxqm8DL5tFYaW3lB50ELxi0KsuTKEbD0t5BCl0aCR2MBJWAbN-xeLwEenaqBiwPVvKixYleeDQiBEIylFdNNIMviKRgXiYuAvMziVPbwSgkZVHeEdF5MQP1Oe2Spac-6IfA"

ഒരു JWT-യുടെ തലക്കെട്ടും പേലോഡ് ഭാഗങ്ങളും അടിസ്ഥാന64url-എൻകോഡ് ചെയ്ത JSON ഒബ്‌ജക്റ്റുകൾ മാത്രമാണ്.

ഹെഡറിൽ ടോക്കണിനെക്കുറിച്ചുള്ള മെറ്റാഡാറ്റ അടങ്ങിയിരിക്കുന്നു, അതേസമയം പേലോഡിൽ ഉപയോക്താവിനെക്കുറിച്ചുള്ള യഥാർത്ഥ "ക്ലെയിമുകൾ" അടങ്ങിയിരിക്കുന്നു. ഉദാഹരണത്തിന്, ഇനിപ്പറയുന്ന ക്ലെയിമുകൾ വെളിപ്പെടുത്തുന്നതിന് മുകളിലുള്ള ടോക്കണിൽ നിന്ന് നിങ്ങൾക്ക് പേലോഡ് ഡീകോഡ് ചെയ്യാം:
{
    "iss": "portswigger",
    "exp": 1648037164,
    "name": "Carlos Montoya",
    "sub": "carlos",
    "role": "blog_author",
    "email": "carlos@carlos-montoya.net",
    "iat": 1516239022
}

മിക്ക കേസുകളിലും, ടോക്കണിലേക്ക് ആക്‌സസ് ഉള്ള ആർക്കും ഈ ഡാറ്റ എളുപ്പത്തിൽ വായിക്കാനോ പരിഷ്‌ക്കരിക്കാനോ കഴിയും. അതിനാൽ, ഏതൊരു JWT-അധിഷ്‌ഠിത മെക്കാനിസത്തിന്റെയും സുരക്ഷ ക്രിപ്‌റ്റോഗ്രാഫിക് സിഗ്നേച്ചറിനെ വളരെയധികം ആശ്രയിക്കുന്നു.

JWT ഒപ്പ്
ടോക്കൺ നൽകുന്ന സെർവർ സാധാരണയായി ഹെഡറും പേലോഡും ഹാഷ് ചെയ്തുകൊണ്ട് ഒപ്പ് സൃഷ്ടിക്കുന്നു. ചില സന്ദർഭങ്ങളിൽ, ഫലമായുണ്ടാകുന്ന ഹാഷും അവർ എൻക്രിപ്റ്റ് ചെയ്യുന്നു. ഏതുവിധേനയും, ഈ പ്രക്രിയയിൽ ഒരു രഹസ്യ ഒപ്പിടൽ കീ ഉൾപ്പെടുന്നു. ഇഷ്യൂ ചെയ്തതിന് ശേഷം ടോക്കണിനുള്ളിലെ ഡാറ്റയൊന്നും തകരാറിലായിട്ടില്ലെന്ന് പരിശോധിക്കാൻ സെർവറുകൾക്ക് ഈ സംവിധാനം ഒരു മാർഗം നൽകുന്നു:
-ഒപ്പ് ടോക്കണിന്റെ ബാക്കി ഭാഗങ്ങളിൽ നിന്ന് നേരിട്ട് ഉരുത്തിരിഞ്ഞതിനാൽ, ഹെഡറിന്റെയോ പേലോഡിന്റെയോ ഒരു ബൈറ്റ് മാറ്റുന്നത് പൊരുത്തപ്പെടാത്ത ഒപ്പിന് കാരണമാകുന്നു.
-സെർവറിന്റെ രഹസ്യ സൈനിംഗ് കീ അറിയാതെ, നൽകിയിരിക്കുന്ന ഹെഡറിനോ പേലോഡിനോ ശരിയായ ഒപ്പ് സൃഷ്ടിക്കാൻ കഴിയില്ല.

JWT vs JWS vs JWE
JWT സ്പെസിഫിക്കേഷൻ യഥാർത്ഥത്തിൽ വളരെ പരിമിതമാണ്. രണ്ട് കക്ഷികൾക്കിടയിൽ കൈമാറാൻ കഴിയുന്ന ഒരു JSON ഒബ്‌ജക്‌റ്റായി വിവരങ്ങൾ ("ക്ലെയിമുകൾ") പ്രതിനിധീകരിക്കുന്നതിനുള്ള ഒരു ഫോർമാറ്റ് മാത്രമേ ഇത് നിർവചിക്കുന്നുള്ളൂ. പ്രായോഗികമായി, JWT-കൾ യഥാർത്ഥത്തിൽ ഒരു ഒറ്റപ്പെട്ട സ്ഥാപനമായി ഉപയോഗിക്കുന്നില്ല. JWT സ്പെസിഫിക്കേഷൻ JSON വെബ് സിഗ്നേച്ചർ (JWS), JSON വെബ് എൻക്രിപ്ഷൻ (JWE) സ്പെസിഫിക്കേഷനുകളാൽ വിപുലീകരിച്ചിരിക്കുന്നു, ഇത് യഥാർത്ഥത്തിൽ JWT-കൾ നടപ്പിലാക്കുന്നതിനുള്ള കൃത്യമായ വഴികൾ നിർവചിക്കുന്നു.

മറ്റൊരു വിധത്തിൽ പറഞ്ഞാൽ, ഒരു JWT സാധാരണയായി ഒരു JWS അല്ലെങ്കിൽ JWE ടോക്കൺ ആണ്. ആളുകൾ "JWT" എന്ന പദം ഉപയോഗിക്കുമ്പോൾ, അവർ എപ്പോഴും അർത്ഥമാക്കുന്നത് JWS ടോക്കൺ എന്നാണ്. JWE-കൾ വളരെ സാമ്യമുള്ളതാണ്, ടോക്കണിലെ യഥാർത്ഥ ഉള്ളടക്കങ്ങൾ എൻകോഡ് ചെയ്യുന്നതിനുപകരം എൻക്രിപ്റ്റ് ചെയ്തതല്ലാതെ.

കുറിപ്പ്
ലാളിത്യത്തിനായി, ഈ മെറ്റീരിയലുകളിൽ ഉടനീളം, "JWT" എന്നത് പ്രധാനമായും JWS ടോക്കണുകളെയാണ് സൂചിപ്പിക്കുന്നത്, എന്നിരുന്നാലും വിവരിച്ചിരിക്കുന്ന ചില കേടുപാടുകൾ JWE ടോക്കണുകൾക്കും ബാധകമായേക്കാം.

എന്താണ് JWT ആക്രമണങ്ങൾ?
ഒരു ക്ഷുദ്ര(malicious) ലക്ഷ്യം നേടുന്നതിനായി ഒരു ഉപയോക്താവ് പരിഷ്കരിച്ച JWT-കൾ സെർവറിലേക്ക് അയയ്ക്കുന്നത് JWT ആക്രമണങ്ങളിൽ ഉൾപ്പെടുന്നു. സാധാരണഗതിയിൽ, ഇതിനകം തന്നെ പ്രാമാണീകരിക്കപ്പെട്ട മറ്റൊരു ഉപയോക്താവായി ആൾമാറാട്ടം നടത്തി പ്രാമാണീകരണവും ആക്സസ് നിയന്ത്രണങ്ങളും മറികടക്കുക എന്നതാണ് ഈ ലക്ഷ്യം.

JWT ആക്രമണങ്ങളുടെ സ്വാധീനം(impact) എന്താണ്?
JWT ആക്രമണങ്ങളുടെ ആഘാതം സാധാരണയായി കഠിനമാണ്. ഒരു ആക്രമണകാരിക്ക് അനിയന്ത്രിതമായ മൂല്യങ്ങളുള്ള സ്വന്തം സാധുതയുള്ള ടോക്കണുകൾ സൃഷ്ടിക്കാൻ കഴിയുമെങ്കിൽ, അവർക്ക് അവരുടെ സ്വന്തം പ്രത്യേകാവകാശങ്ങൾ വർദ്ധിപ്പിക്കാനോ മറ്റ് ഉപയോക്താക്കളെ ആൾമാറാട്ടം നടത്താനോ അവരുടെ അക്കൗണ്ടുകളുടെ പൂർണ്ണ നിയന്ത്രണം ഏറ്റെടുക്കാനോ കഴിഞ്ഞേക്കും.

JWT ആക്രമണങ്ങളുടെ കേടുപാടുകൾ എങ്ങനെയാണ് ഉണ്ടാകുന്നത്?
JWT കേടുപാടുകൾ സാധാരണയായി ഉണ്ടാകുന്നത് ആപ്ലിക്കേഷനിൽ തന്നെയുള്ള തെറ്റായ JWT കൈകാര്യം ചെയ്യുന്നതിനാലാണ്. JWT-കളുമായി ബന്ധപ്പെട്ട വിവിധ സ്പെസിഫിക്കേഷനുകൾ ഡിസൈൻ അനുസരിച്ച് താരതമ്യേന അയവുള്ളതാണ്, ഇത് വെബ്സൈറ്റ് ഡെവലപ്പർമാർക്ക് സ്വയം നിരവധി നടപ്പാക്കൽ വിശദാംശങ്ങൾ തീരുമാനിക്കാൻ അനുവദിക്കുന്നു. ഇത് യുദ്ധ-കഠിനമായ ലൈബ്രറികൾ ഉപയോഗിക്കുമ്പോൾ പോലും ആകസ്മികമായി കേടുപാടുകൾ അവതരിപ്പിക്കുന്നതിന് കാരണമാകും.

ഈ നടപ്പാക്കൽ പിഴവുകൾ സാധാരണയായി അർത്ഥമാക്കുന്നത് JWT യുടെ ഒപ്പ് ശരിയായി പരിശോധിച്ചിട്ടില്ല എന്നാണ്. ടോക്കണിന്റെ പേലോഡ് വഴി ആപ്ലിക്കേഷനിലേക്ക് കൈമാറിയ മൂല്യങ്ങളിൽ കൃത്രിമം കാണിക്കാൻ ഇത് ഒരു ആക്രമണകാരിയെ പ്രാപ്തനാക്കുന്നു. ഒപ്പ് ശക്തമായി പരിശോധിച്ചിട്ടുണ്ടെങ്കിലും, അത് യഥാർത്ഥത്തിൽ വിശ്വസിക്കാൻ കഴിയുമോ എന്നത് രഹസ്യമായി അവശേഷിക്കുന്ന സെർവറിന്റെ രഹസ്യ കീയെയാണ് ആശ്രയിക്കുന്നത്. ഈ കീ ഏതെങ്കിലും വിധത്തിൽ ചോർത്തപ്പെടുകയോ ഊഹിക്കുകയോ മൃഗീയമായി നിർബന്ധിക്കുകയോ ചെയ്യുകയാണെങ്കിൽ, ഒരു ആക്രമണകാരിക്ക് ഏതെങ്കിലും അനിയന്ത്രിതമായ ടോക്കണിനായി ഒരു സാധുവായ ഒപ്പ് സൃഷ്ടിക്കാൻ കഴിയും, ഇത് മുഴുവൻ മെക്കാനിസവും വിട്ടുവീഴ്ച ചെയ്യും.



