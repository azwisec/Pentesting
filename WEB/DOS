Application Level Dos:
1 Long String DOS-
When you set some string so long so server cannot process it anymore and it causes DOS sometimes.

How to test?
Create or Sign up page and put field like username or address or even profile picture name parameter (report 1) like 1000 character of string.
Search that first account from another account. If we view we got no bug. if it 500 response may be a chance of vulnerability.
report 1- https://hackerone.com/reports/764434

Either it will keeping on searching for long time.
Either application will crash (500- Error code)
Refrence: 
https://shahjerry33.medium.com/long-string-dos-6ba8ceab3aa0

2 Long Password DOS attack.
As the value of password is hashed and then stored in Databases. 
If there is no limit on the length of the Password, it can lead to consumption of resources for Hashing the Long Password.

How to test?
-Use a Password of length around 150-200 words to check the presense of Length Restriction
-If there is no Restriction, Choose a longer password and keep a eye on Response Time
-Check if the Application Crashes for few seconds

Where to test?
Registration Password Field is usually restricted but the Length of Password on the Forgot Password Page and the Change Password (As Authenticated User) 
Functionality is usually missing.

References:
https://www.acunetix.com/vulnerabilities/web/long-password-denial-of-service/
https://hackerone.com/reports/738569
https://hackerone.com/reports/167351

3-Application Level DoS
Check if Application has Invite Functionality
Try sending Invites to Invalid Email Accounts
Try to find Email Service Provider such as AWS SES , Hubspot , Campaign Monitor
Note You can find Email Service Provider by checking Email Headers

Once you have the Email Service Provider, Check there Hard Bounce Limits. Here are the limits for some of them:

Hubspot Hard bounces: HubSpot's hard bounce limit is 5%. For reference, many ISPs prefer bounce rates to be under 2%.
AWS SES: The rate of SES ranges from first 2-5% then 5-10%
Impact: Once the Hard Bounce Limits are reached, Email Service Provider will block the Company which means, No Emails would be sent to the Users !

Read;
https://medium.com/bugbountywriteup/an-unexpected-bounty-email-bounce-issues-b9f24a35eb68


4. Cookie bomb
https://target.com/index.php?param1=xxxxxxxxxxxxxx
After input  "xxxxxxxxxxxxxx" as a value of param1, check your cookies. If the value is reflecting in the coookies it means website is vulnerable.
https://hackerone.com/reports/777984
https://hackerone.com/reports/221041
	

